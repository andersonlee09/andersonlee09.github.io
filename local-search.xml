<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python自动化解决Hexo图片引用路径问题</title>
    <link href="/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
    <url>/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Python自动化解决Hexo图片引用路径问题"><a href="#Python自动化解决Hexo图片引用路径问题" class="headerlink" title="Python自动化解决Hexo图片引用路径问题"></a>Python自动化解决Hexo图片引用路径问题</h1><h2 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h2><p>看过我第二篇Blog的小伙伴应该知道，在typora的图片引用和hexo存在一定差别，具体为：</p><img src="/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/image-20220214124532420.png" class><p>可以看到存在一定差距，我昨天一直将原路径里的图片放至blog项目下同名目录中，然后修改markdown文件里图片名称，虽然操作难度不大，但有时候一篇文章可能存在几十张图片，这样子任务繁多，且容易出错，我们是否可以利用<strong>python自动化</strong>完成这些事情呢？答案是可以的！</p><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>我大体思路如下：</p><ol><li><p>首先逐行读取md文件，如果发现该行存在根目录：C：User\xxxxxxxxxxxxxx,则该行为图片所在行</p></li><li><p>将图片名称存下来，将该行变换为可识别引用重新写入副本里，将图片从老文件里存入新文件夹（使用PIL库）</p></li><li><p>最后将老md文件放入final_url文件夹中方便以后本地查看，副本文件修改名称即可。</p></li></ol><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> shutil<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">r 以只读方式打开文件。文件的指针会放在文件的开头。</span><br><span class="hljs-string"></span><br><span class="hljs-string">w 以写入方式打开文件。文件存在覆盖文件，文件不存在创建一个新文件。</span><br><span class="hljs-string"></span><br><span class="hljs-string">a 以追加方式打开文件。如果文件已存在，文件指针放在文件末尾。如果文件不存在，创建新文件并可写入。</span><br><span class="hljs-string"></span><br><span class="hljs-string">r+ 打开一个文件用于读写。文件指针会放在文件的开头</span><br><span class="hljs-string"></span><br><span class="hljs-string">w+ 打开一个文件用于读写。文件存在覆盖文件，文件不存在创建一个新文件。</span><br><span class="hljs-string"></span><br><span class="hljs-string">a+ 打开一个文件用于读写。如果文件已存在，文件指针放在文件末尾。如果文件不存在，创建新文件并可写入。</span><br><span class="hljs-string"></span><br><span class="hljs-string">记忆方法：记住r读，w写，a追加，每个模式后加入+号就变成可读写</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-comment"># typora 自动存储图片所在目录</span><br>old_url = <span class="hljs-string">&#x27;C:\\Users\李瑞航\AppData\Roaming\Typora\\typora-user-images\\&#x27;</span><br><span class="hljs-comment"># blog markdown所在目录</span><br>new_url = <span class="hljs-string">&#x27;D:\\Users\\blog\source\_posts\\&#x27;</span><br><span class="hljs-comment"># 最后想存储原markdown目录</span><br>final_url = <span class="hljs-string">&#x27;D:\\Users\\blog\\markdown\\&#x27;</span><br><span class="hljs-comment"># 文件名称</span><br>filename = <span class="hljs-string">&#x27;linux&#x27;</span><br><br><br><span class="hljs-comment"># 处理文件</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_file</span>(<span class="hljs-params">title</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    process .md or .txt format file</span><br><span class="hljs-string">    :param file: .md or .txt format file</span><br><span class="hljs-string">    :return: null</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># 如果还没有这个文件夹就创建这个文件夹</span><br>    <span class="hljs-keyword">if</span> title + <span class="hljs-string">&#x27;.md&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> os.listdir(new_url):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;未找到该markdown文件！&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">if</span> title <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> os.listdir(new_url):<br>        os.mkdir(new_url + title)<br>    <span class="hljs-comment"># 创建一个副本记录最新处理好的图片路径</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;new_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>_.md&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;new_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>.md&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>):<br>            <span class="hljs-keyword">if</span> old_url <span class="hljs-keyword">in</span> line:<br>                pic_name = line.split(old_url)[-<span class="hljs-number">1</span>][:-<span class="hljs-number">2</span>]<br>                process_pic(pic_name, title)<br>                f.write(<span class="hljs-string">&#x27;&#123;% asset_img &#x27;</span> + pic_name + <span class="hljs-string">&#x27; %&#125;\n&#x27;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                f.write(line)<br>    <span class="hljs-comment"># 移动老的md</span><br>    shutil.move(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;new_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>.md&#x27;</span>, <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;final_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>.md&#x27;</span>)<br>    <span class="hljs-comment"># 将新的md命名为老的md</span><br>    os.rename(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;new_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>_.md&#x27;</span>, <span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;new_url&#125;</span><span class="hljs-subst">&#123;title&#125;</span>.md&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_pic</span>(<span class="hljs-params">pic_name, title</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        remove picture</span><br><span class="hljs-string">        :param pic_name: ome picture name</span><br><span class="hljs-string">        :return: null</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    I = Image.<span class="hljs-built_in">open</span>(old_url + pic_name)<br>    I.save(new_url + title + <span class="hljs-string">&#x27;/&#x27;</span> + pic_name)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># 接收来自cmd的参数</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;尝试处理 <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">1</span>]&#125;</span>&#x27;</span>)<br>        process_file(sys.argv[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">except</span> IndexError:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;未找到该标题所在目录，已经自适应标题~&#x27;</span>)<br>        <span class="hljs-keyword">if</span> filename == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;文件名为空！&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            process_file(filename)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;运行结束&#x27;</span>)<br><br><br></code></pre></td></tr></table></figure><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h3><p>本脚本所用python第三方库均为内置库，无需下载。</p><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>old_url: 即为typora存储图片的路径</p><p>new_url: 即为hexo项目markdown文件所在路径</p><p>final_url: 最后想存储原markdown目录</p><p>title: 想要处理的markdown名称（选填，不填则为空）</p><h3 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h3><ul><li>脚本运行（推荐）</li></ul><p>因为项目使用了sys库，所以可以在命令行直接启动，具体为：</p><p>python xx.py filename.md</p><p>xx为改python 名称，filename为markdown文件名称, 不用加引号</p><ul><li>直接运行</li></ul><p>直接修改文件里filename即可</p><h2 id="结果欣赏"><a href="#结果欣赏" class="headerlink" title="结果欣赏"></a>结果欣赏</h2><p>处理前：</p><img src="/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/image-20220214115422400.png" class><p>处理中：</p><img src="/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/image-20220214122757715.png" class><p>处理后：</p><img src="/2022/02/14/%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8A%9E%E5%85%AC/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%A7%A3%E5%86%B3Hexo%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/image-20220214122837301.png" class><p>成功！！</p>]]></content>
    
    
    <categories>
      
      <category>自动化办公</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Python</tag>
      
      <tag>自动化办公</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础用法</title>
    <link href="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/"/>
    <url>/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20210719144052490.png" class><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><h4 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h4><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20210719144844491.png" class><h4 id="管理组内成员"><a href="#管理组内成员" class="headerlink" title="管理组内成员"></a>管理组内成员</h4><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20210719145010114.png" class><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20210719145324771.png" class><h3 id="日期管理"><a href="#日期管理" class="headerlink" title="日期管理"></a>日期管理</h3><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20210719145405647.png" class><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105131210111.png" class><p>chgrp andersonlee tmp</p><p>给tmp文件修改用户组为andersonlee</p><p>chown 文件所有者和用户组两个一起设置</p><h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3><p>提高当前用户权限来执行后面的语句</p><p>ps&amp;top查看进程信息</p><p>kill id 杀死进程</p><p>杀不死则使用  kill -9 id</p><p>shutdown -h now立刻关机</p><h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h3><p>chmod 777 filename</p><p>chmod修改权限</p><p>user -&gt; u 属主权限</p><p>group -&gt; g 属组权限</p><p>others -&gt; o 其他权限</p><p>all -&gt;a  全部权限</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105133300795.png" class><p>R即为该目录下所有文件</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105133350825.png" class><p><strong>stat</strong> 查看文件属性</p><p>pwd 查看文件路径</p><h3 id="编辑文本"><a href="#编辑文本" class="headerlink" title="编辑文本"></a>编辑文本</h3><h4 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h4><p>i -&gt; insert  当前字符插入</p><p>l -&gt; insert  首行插入</p><p>a -&gt; append   当前字符后添加</p><p>A -&gt; append  行末尾添加</p><p>o -&gt;  当前行后插一空行</p><p>O -&gt;  当前行前插入空行</p><p>写完ESC</p><p>:q  vim进入文件没有对文件做任何操作 可以按q</p><p>:q!  有操作但不想退出保存</p><p>:wq  正常退出保存</p><p>:wq!  强制保存退出</p><p>:set nu显示行</p><p>cat +文件名 查看文件内容</p><p>cat -n +文件名 查看文件内容 加行号</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105163119757.png" class><p>less  查看大文件 q退出</p><p>grep 查找内容</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105165025046.png" class><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105165121746.png" class><p>-n  显示行数</p><p>-i  不区分大小写</p><p>-v  不含有的</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105165451279.png" class><p>查看名字里有sshd的进程</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105165820814.png" class><p>定位到具体行数</p><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><p>ps</p><p>ps -ef 查看所有进程</p><h3 id="软连接（快捷方式）"><a href="#软连接（快捷方式）" class="headerlink" title="软连接（快捷方式）"></a>软连接（快捷方式）</h3><p>ln -s 原路径  新路径</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><p>find</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105180928459.png" class><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p>gzip *   压缩</p><p>gunzip  filename   解压文件</p><p>zip</p><p>-q : 不显示执行过程   -r : 递归处理 对该目录下的子目录一起处理</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105182234465.png" class><p>unzip -l filename.zip 查看压缩文件内容</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105182338320.png" class><p>unzip -d ccc aaa.zip  解压</p><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><p>ifconfig  查看网络</p><p>ping <a href="http://www.baidu.com/">www.baidu.com</a>  向网址发送包</p><p>ping -c 2 <a href="http://www.baidu.com/">www.baidu.com</a>  只发生两次包</p><p>netstat  显示网络状态  -a 显示所有连线中的socket    -i显示网卡列表</p><h3 id="yum下载软件"><a href="#yum下载软件" class="headerlink" title="yum下载软件"></a>yum下载软件</h3><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105183711457.png" class><p>-y表示遇到选择就选yes</p><p>删除</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105183819413.png" class><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>注释：</p><p>:&lt;&lt;!</p><p>​    注释内容</p><p>！</p><p>单引号和双引号的区别</p><img src="/2022/02/14/linux/Linux%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95/image-20211105204011402.png" class><p>命令定义</p><p>变量名&#x3D;‘命令’</p><p>变量名&#x3D;$(命令)</p><p><strong>使用变量正规写法</strong></p><p>“${变量名}”</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客引用图片无法显示</title>
    <link href="/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/"/>
    <url>/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客引用图片无法显示"><a href="#Hexo博客引用图片无法显示" class="headerlink" title="Hexo博客引用图片无法显示"></a>Hexo博客引用图片无法显示</h1><p>今天开始编写博客的时候，发现用Typora编写的文章引用图片编译后总是不能正常显示</p><p>于是开始各种百度，出来的都是下载一个路径转换<code>hexo-asset-image</code>的插件</p><p><code>hexo-asset-image</code>使用说明：</p><p><code>npm install hexo-asset-image --save</code></p><img src="/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/image-20220213174631295.png" class title="This is an example image"><p>可一顿操作过后，还是不能够正常显示；</p><img src="/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/image-20220213174756400.png" class title="This is an example image"><p>然后得到了一份index.js脚本的脚本，替换掉博客目录下node_modules&#x2F;hexo-ass-image&#x2F;index.js，并使用标签插件方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><span class="hljs-keyword">var</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cheerio&#x27;</span>);<br><br><span class="hljs-comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPosition</span>(<span class="hljs-params">str, m, i</span>) &#123;<br>  <span class="hljs-keyword">return</span> str.<span class="hljs-title function_">split</span>(m, i).<span class="hljs-title function_">join</span>(m).<span class="hljs-property">length</span>;<br>&#125;<br><br><span class="hljs-keyword">var</span> version = <span class="hljs-title class_">String</span>(hexo.<span class="hljs-property">version</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;after_post_render&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)&#123;<br>  <span class="hljs-keyword">var</span> config = hexo.<span class="hljs-property">config</span>;<br>  <span class="hljs-keyword">if</span>(config.<span class="hljs-property">post_asset_folder</span>)&#123;<br>    <span class="hljs-keyword">var</span> link = data.<span class="hljs-property">permalink</span>;<br><span class="hljs-keyword">if</span>(version.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-title class_">Number</span>(version[<span class="hljs-number">0</span>]) == <span class="hljs-number">3</span>)<br>   <span class="hljs-keyword">var</span> beginPos = <span class="hljs-title function_">getPosition</span>(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span><br>   <span class="hljs-keyword">var</span> beginPos = <span class="hljs-title function_">getPosition</span>(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">4</span>) + <span class="hljs-number">1</span>;     <span class="hljs-comment">//markdown的本地路径是xxx/x.jpg    hexo g编译后加上这句就是public/2020/05/26/xxx/xx.jpg 前4个文件+后一个图片~</span><br><span class="hljs-comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br><span class="hljs-keyword">var</span> endPos = link.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&#x27;/&#x27;</span>) + <span class="hljs-number">1</span>;<br>    link = link.<span class="hljs-title function_">substring</span>(beginPos, endPos);<br><br>    <span class="hljs-keyword">var</span> toprocess = [<span class="hljs-string">&#x27;excerpt&#x27;</span>, <span class="hljs-string">&#x27;more&#x27;</span>, <span class="hljs-string">&#x27;content&#x27;</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; toprocess.<span class="hljs-property">length</span>; i++)&#123;<br>      <span class="hljs-keyword">var</span> key = toprocess[i];<br> <br>      <span class="hljs-keyword">var</span> $ = cheerio.<span class="hljs-title function_">load</span>(data[key], &#123;<br>        <span class="hljs-attr">ignoreWhitespace</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">xmlMode</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">lowerCaseTags</span>: <span class="hljs-literal">false</span>,<br>        <span class="hljs-attr">decodeEntities</span>: <span class="hljs-literal">false</span><br>      &#125;);<br><br>      $(<span class="hljs-string">&#x27;img&#x27;</span>).<span class="hljs-title function_">each</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br><span class="hljs-keyword">if</span> ($(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>))&#123;<br><span class="hljs-comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br><span class="hljs-keyword">var</span> src = $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/http[s]*.*|\/\/.*/</span>.<span class="hljs-title function_">test</span>(src) &amp;&amp;<br>   !<span class="hljs-regexp">/^\s*\//</span>.<span class="hljs-title function_">test</span>(src)) &#123;<br>  <span class="hljs-comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br>  <span class="hljs-comment">// In addition, to support multi-level local directory.</span><br>  <span class="hljs-keyword">var</span> linkArray = link.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;/&#x27;</span>).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)&#123;<br><span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span>;<br>  &#125;);<br>  <span class="hljs-keyword">var</span> srcArray = src.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;/&#x27;</span>).<span class="hljs-title function_">filter</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)&#123;<br><span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="hljs-string">&#x27;.&#x27;</span>;<br>  &#125;);<br>  <span class="hljs-keyword">if</span>(srcArray.<span class="hljs-property">length</span> &gt; <span class="hljs-number">1</span>)<br>srcArray.<span class="hljs-title function_">shift</span>();<br>  src = srcArray.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);<br>  $(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>, config.<span class="hljs-property">root</span> + link + src);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+config.<span class="hljs-property">root</span> + link + src);<br>&#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;no src attr, skipped...&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>($(<span class="hljs-variable language_">this</span>));<br>&#125;<br>      &#125;);<br>      data[key] = $.<span class="hljs-title function_">html</span>();<br>    &#125;<br>  &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>然后就可以正常显示图片了<br>但是请<strong>注意</strong>：这里图片的引入和项目目录十分重要</p><img src="/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/5fa161ad.png" class title="This is an example image"><p>如上图所示，markdown文件应与其同名文件夹在同一目录下，且引入图片时有特殊规范 <code>asset_img</code>为固定写法， 后面直接跟文件夹下图片名称，最后为图片描述。</p><p><strong>最后引入结果：</strong></p><img src="/2022/02/13/hexo/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%95%E7%94%A8%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA/c8eb51ec.png" class title="This is an example image"><p>如上图所示：引入成功！</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 搭建个人博客</title>
    <link href="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-搭建个人博客"><a href="#Hexo-搭建个人博客" class="headerlink" title="Hexo 搭建个人博客"></a>Hexo 搭建个人博客</h1><h2 id="0-说明"><a href="#0-说明" class="headerlink" title="0.说明"></a>0.说明</h2><p>本项目基于Windows10利用Hexo部署个人博客并且投放至GitHub</p><h2 id="1-下载node-js"><a href="#1-下载node-js" class="headerlink" title="1.下载node.js"></a>1.下载node.js</h2><p>顺带下载npm</p><p>直接在官网下载，本文不作说明</p><h2 id="2-查看环境"><a href="#2-查看环境" class="headerlink" title="2.查看环境"></a>2.查看环境</h2><p>node -v</p><p>npm -v</p><p>如果没有异常则下载成功</p><h2 id="3-切换镜像"><a href="#3-切换镜像" class="headerlink" title="3.切换镜像"></a>3.切换镜像</h2><p>npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212123235109.png" class title="This is an example image"><h2 id="4-下载hexo"><a href="#4-下载hexo" class="headerlink" title="4.下载hexo"></a>4.下载hexo</h2><p>cnpm install -g hexo-cli</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212123235109.png" class title="This is an example image"><p>hexo -v查看版本</p><h2 id="5-初始化博客"><a href="#5-初始化博客" class="headerlink" title="5.初始化博客"></a>5.初始化博客</h2><p>hexo init</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212123658729.png" class title="This is an example image"><p>初始化结果：</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212123731036.png" class title="This is an example image"><h2 id="6-启动博客"><a href="#6-启动博客" class="headerlink" title="6.启动博客"></a>6.启动博客</h2><p>hexo s</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212124240300.png" class title="This is an example image"><p>初始化结果</p><h2 id="7-写博客"><a href="#7-写博客" class="headerlink" title="7.写博客"></a>7.写博客</h2><p>hexo n “My first blog”</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212124523578.png" class title="This is an example image"><p>对该目录下markdown进行编辑</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212124815007.png" class title="This is an example image"><p>编辑结束后</p><p>hexo clean</p><p>hexo g</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212125017647.png" class title="This is an example image"><p>hexo s</p><p>结果：</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212125137499.png" class title="This is an example image"><h2 id="8-投放至GitHub"><a href="#8-投放至GitHub" class="headerlink" title="8.投放至GitHub"></a>8.投放至GitHub</h2><h3 id="8-1-创建GitHub项目"><a href="#8-1-创建GitHub项目" class="headerlink" title="8.1 创建GitHub项目"></a>8.1 创建GitHub项目</h3><p>命名必须符合规范：name.github.io</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212130118069.png" class title="This is an example image"><h3 id="8-2下载git帮助"><a href="#8-2下载git帮助" class="headerlink" title="8.2下载git帮助"></a>8.2下载git帮助</h3><p>npm install hexo-deployer-git –save</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212130405182.png" class title="This is an example image"><h3 id="8-3设置-config-yml"><a href="#8-3设置-config-yml" class="headerlink" title="8.3设置_config.yml"></a>8.3设置_config.yml</h3><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212130741480.png" class title="This is an example image"><h3 id="8-4-修改Deployment"><a href="#8-4-修改Deployment" class="headerlink" title="8.4 修改Deployment"></a>8.4 修改Deployment</h3><p>修改前：</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212131006177.png" class title="This is an example image"><p>修改后：</p><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212123235109.png" class title="This is an example image"><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212141732952.png" class title="This is an example image"><p>hexo g -d</p><h3 id="8-4成功部署"><a href="#8-4成功部署" class="headerlink" title="8.4成功部署"></a>8.4成功部署</h3><img src="/2022/02/13/hexo/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/image-20220212141749479.png" class title="This is an example image"><p><strong>至此所有部署已经完成</strong> </p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
